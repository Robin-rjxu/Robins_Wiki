{"pages":[{"title":"About","date":"2020-08-14T08:35:14.026Z","path":"about/index.html","text":""},{"title":"Categories","date":"2020-08-14T08:35:14.026Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2020-08-14T08:35:14.030Z","path":"tags/index.html","text":""}],"posts":[{"title":"ADC 测试数据处理 ADC Test Data Processing","date":"2020-08-13T03:15:08.000Z","path":"wiki/36844/","text":"插值采样 Decimation 采用插值采样的原因 考虑高速 ADC 测试直接将高频数据输出，而在片上设计存储器的方式需要较大的面积与精细的时序设计，因此通常采用 插值 (Decimation) 采样 的方法，用分频后的时钟采样锁存 ADC 的原始数据，得到降频后的数据，再通过 模拟 pad 输出片外测试。 插值采样的配置 若插值系数为 P_deci，则插值采样的时钟分频比应设为 P_deci。考虑相干采样和静态性能测试的要求，一般所需的有效数据点应不少于 2（N_bit+2） ，设为 N_fft，即片外仪器采集到 N_fft 个数据点，而对应时间内，ADC 输出的总数据点数应为 N_data= N_fft * P_deci，对应满足相干采样条件的输入信号频率为 F_in=max(primes(N_data/2))​。 频谱混叠 由于内插采样，数据采样的频率实际是 F_s/P_deci，N_fft 个数据点对应的频率分辨率为 F_s/N_data，即频率分辨率不变，而对应的频率区间变为 F_s/P_deci，即频率区间缩小为 1/P_deci。实际的采样频率降低了，当 F_in &gt; F_s/2/P_deci 时，会发生混叠，即输入信号位于第一奈奎斯特区间以外时，会混叠回第一奈奎斯特区间。其中，偶数区间的信号还会发生镜像。如，若无额外处理，F_in = 0.9 * F_s/2 的信号会显示在 0.1 * F_s 的位置。为了得到真实的频谱，需要对采用插值采样的数据进行处理： 数据对应的频率区间范围缩小至 F_s/2/P_deci ； 偶数奈奎斯特区间的信号在频域上镜像 数据展开 Unwrapping 相干采样的正弦波可以使用称为“展开”的概念重新组合。 数据展开的基本原理是，采样所得的 第 i 个数据，是 N_fft 个点的单个周期波形数据中的第 mod( i*M, N_fft) 个，其中 N_fft 是所处理的数据点数，M 是所处理的数据中包含的输入信号周期数。 图8 显示了一个正弦波，其中 M = 11个 周期的输入信号采样 N = 4096次。 图9是应用展开后的相同波形。 如果已对波形进行了相干采样，则展开后的波形应看起来像是一个周期采样了N次。 Fig8 Fig9 仿真验证 用 matlab 脚本对理想 ADC 的数据进行 插值采样 和 展开。 对一个 8 bits 的 ADC，采样频率 F_s=1 GHz，处理点数 N_fft = 1024，插值系数为 32，ADC 产生的总数据点数 N_data=32768，包括 cycles=16381 个周期的输入信号，即 F_in=F_s/N_data * cycles=499.1 MHz，位于第 32 奈奎斯特区间，相关结果如下。 Time Domain image-20200814013000773 Unwrapping Output References A Tutorial in Coherent and Windowed Sampling with A/D Converters [Renesas] 附录 相关算法 1. 算法伪代码 123456789101112void unwrap_algorithm(tsample,unwrap,size_cap,M)int tsample[],unwrap[],M,size_cap;&#123;int i,j;for (i=0; i&lt;size_cap;i++)&#123;j = M*i % size_cap;unwrap[j] = tsample[i];&#125;/* Sample Call *//* unwrap_algorithm(tsample,unwrap,size_cap,f_bin); */&#125;/* End of Unwrap Algorithm */ 2. Matlab 代码 2.1 De-Decimation (release aliasing) 123456789101112131415161718192021222324252627282930% fft spectrumpfft = abs(fft(dout_deci))/N_fft/(VFS/2)^2*2; % normalize to full range[p_row,p_col,p_v] = find(pfft);p_base = min(p_v);s = 10*log10(pfft + p_base*0.5);s1 = s(1:N_fft/2);s2 = s(N_fft/2+1:N_fft);% decide Nyquist regionN_nq = ceil(Fin/(Fs/2/P_deci));F_res = Fs / N_fft / P_deci;flag_odd = mod(N_nq, 2);if flag_odd s_eq = s1;else s_eq = s2;end% frequency domainf = (0:N_fft/2-1) * F_res + (N_nq-1)* Fs/2/P_deci;figure(2);plot(f,s_eq, &#x27;r&#x27;);hold on;plot(f(i_sig), s_eq(i_sig),&#x27;r-*&#x27;,&#x27;LineWidth&#x27;,3);grid onbox on;txt = [ &#x27;F\\_in = &#x27;, num2str(f(i_sig)/1e6,3),&#x27;MHz&#x27;];text(f(i_sig-floor(0.1*N_fft)), s_eq(i_sig)-2,txt);xlabel(&#x27;Frequency[f/f_s]&#x27;);ylabel(&#x27;Magnitude [dBFS]&#x27;); 2.2 Unwrapping 123456789101112% unwrapping% N_data: number of data needed to be captured% N_fft: number of the data de-decimation, target data point% N_data = N_fft * P_decidout_uw = zeros(N_fft,1);Fin_uw = f(i_sig);step_uw = round(Fin_uw / Fs * N_data);for i_data=(1:N_fft) j_data = mod(((i_data-1)*step_uw + 1), N_fft); if j_data == 0 j_data = N_fft; end dout_uw(j_data) = dout_deci(i_data);end","tags":[{"name":"ADC","slug":"ADC","permalink":"https://wiki.robin-ic.fun/tags/ADC/"},{"name":"Signal & System","slug":"Signal-System","permalink":"https://wiki.robin-ic.fun/tags/Signal-System/"}],"categories":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/categories/IC/"},{"name":"ADC","slug":"IC/ADC","permalink":"https://wiki.robin-ic.fun/categories/IC/ADC/"}]},{"title":"SAR ADC 电容误差分析与验证","date":"2020-08-12T08:09:16.000Z","path":"wiki/12155/","text":"SAR ADC 线性度性能要求 CDAC 中单位电容的失配足够小。一般情况下，CDAC 中电容是定制的金属电容，因此它的匹配参数是没有预先获知的。为了分析电容误差，首先讨论的是 ADC 对匹配的要求，而对定制电容的失配估计，则通过与提供失配模型的 MIM 电容进行比较。文末提供电容失配仿真的数据参考。 匹配要求 选取 mid-code 的转换，即 [1000…] 和 [0111..] 的转换作为最差情况，此时所有的二进制码全部发生变化，若将每个单位电容的失配作为独立随机变量，则在该情况下，失配引起的 CDAC 输出电压误差最大。 ADC 容忍的最大 DNL 为 0.5 LSB，即 \\(3\\sigma\\) 偏差满足： \\[ 3\\sigma_{DNL,mid}&lt;\\dfrac{1}{2}LSB \\tag{1} \\] 单位电容一归一化值为 \\(C_u\\) ，标准差为 \\(\\sigma_u\\) 的模型表示。对于 8-bit 二进制权重的差分 CDAC，它包括 510 个 单位电容 \\((2\\cdot (2^8 -1))\\) ，每个 LSB 对应两个单位电容 \\(2C_u\\)的步长（2来自差分配置）。在 MSB 码切换，即 (01111111) 到 (10000000) 切换时，所有 510 个单位电容都切换，根据独立随机事件同时发生计算等效的标准差 \\(\\sigma\\) 为： \\[ \\sigma_{DNL,mid} = \\dfrac{\\sqrt{510}\\sigma_u}{\\sigma_u} \\tag{2} \\] 通过 (1) 和 (2) 可知，要求： \\[ 3\\dfrac{\\sqrt(510)\\sigma_u}{2C_u} &lt; \\dfrac{1}{2} \\Rightarrow \\dfrac{\\sigma_u}{C_u} &lt; 1.5\\% \\tag{3} \\] \\(\\star\\) 独立随机变量： 期望 \\(E(X_1 + X_2) = E(X_1) + E(x_2)\\) ； 方差 \\(Var(X_1+X_2) = Var(X_1) + Var(X_2)\\) 。 与 MIM 电容比较 参考工艺 PDK 中电容的失配数据，如 MIM 电容。由于 MIM 电容为平面电容，所使用的定制电容也可以认为是平面电容，其面积为 A，平面之间的间隔为 d，插指金属的间隔对应 d，而面积 A 由金属的高度和插指轮廓的乘积得到。本例中，定制电容使用两层金属6和7堆叠，金属之间最小间隔为 \\(d=0.14 \\mu m\\) ，高度和为 \\((2\\cdot 0.31 \\mu m)\\) , 而插指轮廓约为 \\(2.78 \\mu m\\) ，因此电容面积为 \\(A=1.7 \\mu m^2\\) 考虑平板电容的容值为： \\[ C = \\dfrac{\\epsilon_0 \\epsilon_\\gamma}{d} \\tag{4} \\] 若给定 \\(\\epsilon_\\gamma = 4\\) ，则电容值约为 0.43 fF。本例中，MIM 电容的电容密度约为 \\(2 fF/\\mu m^2\\) ，匹配精度为 1%，意为任意两个 \\(1 \\mu m^2\\) 单位面积电容之间的随机失配是 1%，则其对应的标准差应为 \\(1\\% / \\sqrt{2}\\) 即 0.7%。由于计算的电容面积为 1.7 \\(\\mu m^2\\) ，对应的失配为 $ 0.7 / = 0.54%$% 。然而，本例中定制电容的间距 d=0.14 \\(\\mu m\\) 远小于 MIM 电容中的间距，因此实际的匹配度会远由于对应的 MIM 电容计算所得的 0.54% 。 需要注意的是，本例中使用 MIM 电容的匹配信息估算定制电容的参数。由于二者的结构和制造差异，计算结果仅用作参考，不能得到精确的匹配的值。 仿真获取 MOM 电容失配信息 使用 T65 工艺的 MOM 电容为例仿真失配信息。对最小面积的电容，使用金属层 5 到 7，但插指部分没有 Via，只在边界处通过 Via 连通。金属间距为 100n，金属宽度也是 100n，最小插指数为 6x6 。蒙特卡洛仿真，得到的 Mean 为 2.36637 fF，而 Std Dev 为7.05008 a，即 0.3%。考虑该电容实际使用了3层金属，电容实际外形面积为 \\(1.7*1.7=2.89 \\mu m^2\\) ，因此推算其单层单位外形面积金属的失配约为 \\(\\sigma_u =0.3\\% * \\sqrt{3} * \\sqrt{2.89}= 1.5\\%\\)，而对应的任意两个电容之间的失配 约为 \\(1.5*\\sqrt{2}=2.12\\%\\) 。 为验证电容面积与失配的关系，仿真 插指数 为 32x32 的 MOM 电容，即面积为 28.44 倍，其他参数同上。仿真得到 Mean 为 59.8966 fF，而 Std Dev 为 39.2708 a，即 0.0656%。考虑上面仿真的 $_{66} = 0.3 / (32/6) 0.056% $ ，与仿真结果基本相符。若再将 32x32 电容的 multiplier 设为4，即面积增加 16 倍， Mean 为 239.586 fF，Std Dev 为 87.3902 a，即 0.0368%。对比由 1x32x32 的情况推导，即 \\(\\sigma_{1\\times 32 \\times 32}=0.0656 / \\sqrt{4} \\approx 0.0328\\%\\)，与仿真结果基本相符。 References [1] P. J. A. Harpe et al., \"A 26 \\(\\mu\\) W 8 bit 10 MS/s Asynchronous SAR ADC for Low Energy Radios,\" in IEEE Journal of Solid-State Circuits, vol. 46, no. 7, pp. 1585-1595, July 2011, doi: 10.1109/JSSC.2011.2143870. IEEE Link [2] 概率论笔记-Ch4期望与方差","tags":[{"name":"ADC","slug":"ADC","permalink":"https://wiki.robin-ic.fun/tags/ADC/"}],"categories":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/categories/IC/"},{"name":"Analog","slug":"IC/Analog","permalink":"https://wiki.robin-ic.fun/categories/IC/Analog/"}]},{"title":"窗口采样 Window Sampling","date":"2020-07-18T09:50:08.000Z","path":"wiki/30261/","text":"关键 使用窗口采样可以补偿非相关采样条件下波形的非理想性，减少频谱泄露。 窗函数的选择主要考虑主瓣宽度，最大旁瓣幅度以及旁瓣滚降率等特性，需要根据不同的应用，选择适合的折衷方案。 概述 窗口采样的原理 FFT 把采集的时域数据转换到频域时，假设从 -∞ 到 +∞ 连续采样，即假设采样到的信号为周期信号。如果不满足上述用于相干采样的条件，则可能造成信号起点/终点的非连续性，发生非相干采样。除非使用窗口采样，将采样波形与描述窗口的在时域相乘，来补偿波形的不连续性，否则频谱泄漏是不可避免的。 Fig3 Fig5 窗函数的频域响应 输入数据加窗，等效于将原始信号的频谱与窗口的频谱进行卷积。尽管通常假定不使用任何窗口进行相干采样，但实际上，使用矩形窗口对输入信号进行卷积。 窗口的频率特性是由主瓣和几个旁瓣组成的连续频谱。主瓣以输入信号的频率为中心。旁瓣从主瓣的两侧趋近零。另一方面，FFT 产生离散频谱。窗口的连续周期性频谱通过 FFT 进行采样，就像ADC在时域中对输入信号进行采样一样。在 FFT 的每个频率线中出现的是在每个 FFT 频率分量处的连续卷积频谱的值。 如果原始信号的频率成分与频率线完全匹配，如采集的数据为整数个周期的情况，只能看到频谱的主瓣，旁瓣不会出现，因为窗口频谱在主瓣两侧的谱线频率间隔处趋近于零。 如果采集数据的时间内不包含整数个周期，则窗口的连续频谱会从主瓣中心偏移分数倍的频率谱线间隔。这对应于 FFT 频谱中频率分量和频率谱线之间的差异，导致旁瓣出现在频谱中。因此，给定窗口的旁瓣特性直接影响相邻频率分量“泄漏”到相邻频率谱线中的程度。 窗函数的特性与选择 窗函数的特性 在选择适当的窗口之前，必须定义用于比较窗口特性的参数（表1）。 这样的特性包括窗口的-3dB和-6dB主瓣宽度，最大旁瓣幅度以及旁瓣滚降率。 给定窗口的旁瓣由两个主要特征标识： 相对于主瓣峰值，最大的旁瓣高度，以分贝为单位。 旁瓣滚降，定义为旁瓣峰值的渐近衰减率。 表1显示了常用窗函数的参数，这些参数通常用于在非相干采样条件下测试高速ADC的动态性能。 窗类型 -3dB 主瓣宽度 -6dB 主瓣宽度 最大旁瓣高度 旁瓣滚降率 Rectangular 0.89 bins 1.21 bins -13.2 dB 20dB/decade 6dB/octave Hamming 1.3 bins 1.81 bins -13.2 dB 20dB/decade 6dB/octave Hanning 1.44 bins 2 bins -31.6 dB 60dB/decade 6dB/octave Blackman 1.68 bins 2.35 bins -58 dB 60dB/decade 6dB/octave 窗函数的选择 在选择窗函数时，应考虑带宽和旁瓣高度。 通常，旁瓣越低，信号频域中的泄漏越少。 但是，降低旁瓣也导致更多的能量集中在变宽的主瓣上。 对于频谱分离，窗函数的带宽越大，它对相同幅度和相邻频率提供的选择性越小，大的带宽导致它们一起模糊。另一方面，较低的旁瓣高度增加了不相等幅度的相邻分量之间的选择性，因为较低幅度的分量不再淹没泄漏裙中。通常，在选择正确的窗函数之前需要大量的反复试验。 不同的窗口支持不同的应用，选择正确的窗函数并非易事。假设信号包含远离感兴趣频率的强干扰频率分量，则应选择旁瓣具有高滚降率的窗口（例如 Hanning 窗）。但是，如果强干扰信号接近感兴趣的频率，则最大旁瓣电平较小的窗函数（例如，Flat Top 窗）是更合适的选择。对于具有相同幅度的相邻分量的波形，使用矩形窗或不加窗能获得最佳分析。对于单音测试，其重点是幅度精度而不是其在频率谱线的精确位置，建议使用主瓣较宽的窗口（例如Blackman窗口）。 根据应用，信号内容，FFT频谱成分和感兴趣的特性，窗函数的选择总是频谱泄漏最小化，频率/幅度精度，旁瓣减小和主瓣宽度增加之间的折衷。 References Coherent Sampling vs. Window Sampling [Maxiam] A Tutorial in Coherent and Windowed Sampling with A/D Converters [Renesas] Window Function [Wikipedia]","tags":[{"name":"DSP","slug":"DSP","permalink":"https://wiki.robin-ic.fun/tags/DSP/"},{"name":"Signals & Systems","slug":"Signals-Systems","permalink":"https://wiki.robin-ic.fun/tags/Signals-Systems/"}],"categories":[{"name":"Basics","slug":"Basics","permalink":"https://wiki.robin-ic.fun/categories/Basics/"},{"name":"Signals and Systems","slug":"Basics/Signals-and-Systems","permalink":"https://wiki.robin-ic.fun/categories/Basics/Signals-and-Systems/"}]},{"title":"相干采样 Coherent Sampling","date":"2020-07-18T05:11:54.000Z","path":"wiki/20123/","text":"关键 采样窗口中存在整数个周期性波形，称为相干采样。 通过相干采样可以确保，单频率输入信号的频谱中，信号功率包含在一个 FFT 谱线内，避免频谱泄露。 使用素数 M 个输入信号周期，可以消除了采样点数 N 的所有公因数，避免不同次谐波混叠后位于相同谱线，保证谐波性能计算的准确性。 输入信号，采样时钟频率的准确性对测试结果有显著影响，体现为 M 的变化导致 ENOB 测试结果的显著恶化。 相干采样并不保证采集数据的完备性，即 N 个采样点不一定覆盖所有输出数字码，而是与输入信号的概率分布特性有关。 概述 背景 相干采样 是评估高速数据转换器动态性能的最有效工具之一。满足一定条件下，这一既有可以提高 FFT 的频谱分辨率，消除使用 窗口采样 的需要。然而，如果相干采样的条件不满足，可以使用 窗口采样。 FFT 把采集的时域数据转换到频域时，假设从 -∞ 到 +∞ 连续采样，即假设采样到的信号为周期信号。如果不满足上述用于相干采样的条件，则可能造成信号起点/终点的非连续性，发生非相干采样。除非使用窗口采样，将采样波形与描述窗口的在时域相乘，来补偿波形的不连续性，否则频谱泄漏是不可避免的。 相干采样的定义 当采样窗口中存在整数个周期时，就会实现周期性波形的相干采样，即满足下式： \\[ \\dfrac{f_{IN}}{f_S} = \\dfrac{M}{N} \\] 其中： \\(f_S\\) 为采样频率 \\(f_{IN}\\) 为输入频率 M 为数据周期数 N 为采样的点数 数据周期数 M 通常选择2以外的质数，这确保了采样信号数据不会在 N 个采样点数内周期重复。 通过相干采样可以确保，单频率输入信号的频谱中，信号功率包含在一个 FFT 谱线内。 讨论 数据周期数的选择 数据周期数 M 通常选择2以外的质数，这确保了采样信号数据不会在 N 个采样点数内周期重复。 例如，如果 N = 32 且 M = 6（非质数），则输入频率的每个周期将有 N / M = 5.33 个采样，因此输入的三个周期将恰好获取16个采样，因此前16个采样样本将与后16个样本相同。通常，通过重复相同的采样点不会获得任何其他信息，因此通常不应使用非质数 M 。 相干采样的理想参数 对于任意M和N，相干关系都成立，但实际值可提供更好的结果。由于其固有的周期性，FFT要求采样数为2的幂，因此 N 通常选择 2 的幂。 DFT可以在任意样本大小上执行，但需要更多的计算时间。 M应该是奇数或质数。使用 奇数的 M，可以消除了 N 的许多公因数；若使用素数 M，可以消除了所有 N 的公因数。M和N之间的公因数可能导致混叠后， FFT 的频谱上，\\(f_{IN}\\) 的不同次谐波位于相同的谱线而 M 的唯一性对于谐波失真的计算绝对必要。 下面讨论什么条件下，不同次谐波位于相同谱线。 若 谐波 \\(h\\) 在 N 点 FFT 的频谱中的谱线位于 \\(M_h\\) ，即满足： \\[ M_h = \\begin{cases} |h-N\\times \\lfloor \\dfrac{h + N/2}{N} \\rfloor |, \\ h\\neq \\dfrac{N}{2} \\\\ 0, \\ h=\\dfrac{N}{2} \\end{cases} \\] 假设不同次谐波 \\(h_1\\) 和 \\(h_2\\) 位于同一谱线，则满足 \\(M_{h1} = M_{h2} = M_{h}\\) ，且 \\(h_1, h_2, N\\) 均为正整数，则有 \\[ \\dfrac{h_1 \\pm h_2}{N} = \\lfloor \\dfrac{h_1 + N/2}{N} \\rfloor \\pm \\lfloor \\dfrac{h_2 + N/2}{N} \\rfloor \\] 即 \\[ M_{h1} = M_{h2} \\Leftrightarrow \\dfrac{h_1 \\pm h_2}{N} = integer \\] 由于第 \\(x\\) 次谐波满足 \\(h = M \\cdot x\\)， 即周期 \\(M\\) 的整数倍，上式还可以进一步简化为 \\[ (x_1 \\pm x_2)\\cdot M/N = integer \\] 例如，若 N = 64，M = 24，则 \\(h_{10} = 16\\)，\\(h_{14} = 16\\)，此时计算谐波的功率将存在误差。 上式表明，若谐波位置与 FFT 点数之比为整数，不同谐波会出现在统一谱线上。若采样数据的周期数 M 与 N 互质（无公因数），则上式必不成立。 考虑经典的 \\(f_{IN}=f_S/2\\) 的情况，由于 \\(M=N/2\\)，式(6) 条件变为 \\((x_1 \\pm x_2)/2 = integer\\)。这意味着，所有的奇次谐波都与 基频 位于相同谱线，而所有偶数谐波都位于 DC 处，因此所得频谱中不包括任何谐波和信噪比信息。 相干采样的非理想参数 上述讨论说明，考虑测试设备的频率分辨率和线性度性能，实现相干采样的条件比较复杂，通常需要对采样时钟和输入信号的频率进行繁琐的迭代计算才可求得。 小幅调整 M 的 0.005 以改变相干条件，则谐波分量会显着增加，并且会发生称为展开的情况。 展开（有时称为拖尾或泄漏）会导致以基频频率点为中心的尖峰。 尖峰的宽度表示不连贯的程度。 对于理解问题的本质至关重要的概念是，将 M 改变的真正含义理解为 \\(f_{IN}\\) 相对 \\(f_S\\) 相对变化。 如果 N 和 \\(f_S\\) 保持恒定，并且 M 增加 0.005，则输入频率 \\(f_{IN}\\) 增加 \\(f_S / N * 0.005\\)，从而在时域窗口中引起泄漏，导致非相干性。 A/D 测试的一个重要指标是 ENOB 或有效位数。图6 显示了 M 从 M-0.5 变为 M + 0.5 对 ENOB 性能的影响。由于数据基于理想转换器，因此我们希望能够实现10位精度。确实，存在一个可以达到10位的区域，但是它很小。该区域的敏锐度突出了为什么必须准确观察到连贯性的原因。假设输入频率为 10MHz，图6 的范围代表了 9995117Hz 至 10004883Hz 的输入频率范围。当 M 的变化进一步缩小为 ±0.00005，图7 显示了 M 的变化为 0.0005 时 ENOB 的变化。在大多数情况下，高频设备的可编程精度为 1Hz，从而实现 ±0.5Hz 所需的 (M±0.0005)的范围。信号源的精度使理想输入信号时达到在 9.95-10.0 位范围。 fig6 image-20200719004921060 波形展开 相干采样的正弦波可以使用称为“展开”的概念重新组合。 图8 显示了一个正弦波，其中 M = 11个 周期的输入信号采样 N = 4096次。 图9是应用展开后的相同波形。 如果已对波形进行了相干采样，则展开后的波形应看起来像是一个周期采样了N次。 Fig8 Fig9 重采样与插值重采样 如果采集了9.5个周期的波形，则可以缩短数据窗口以忽略额外的0.5个周期。假设原始数据集的长度为1045个样本，如图10所示，在丢弃了额外的0.5个周期后，数据集将减少为990个样本，如图11所示。现在可以对修改后的数据执行990点DFT，以产生无泄漏的准确结果。这给限于2的幂 FFT算法带来问题。 Fig10-11 但是，可以对新样本集进行重新采样以适合给定的样本大小，或者可以应用插值技术将波形拟合到适当大小的样本集中。图11 中的 9.0 个周期波形被重新采样，提供1024个采样数据点。 图15显示了线性重采样在频域中的影响。线性重采样可保留原始数据的幅度并避免泄漏，但会产生更不连续的波形，从而导致谐波失真。 图14是一个类似的示例，只是数据使用线性插值进行了重采样。线性插值重采样可以解决时域不连续的问题，但不能完全保留原始数据。 Fig14-15 仿真实例 输入为正弦信号 由于正弦信号并非均匀分布，对 B 位理想 ADC，满足相干采样，采集 \\(N=2^B\\) 个点，并不能获得输入范围内的所有数字码。 例如，取一个 8 位理想 ADC 采样 256 个点 M = 127 时，得到 134 个数字码， ENOB = 7.38； M = 11时，得到 200 个数字码， ENOB = 8.2。 采样 512 个点 M = 251 时，得到 214 个数字码， ENOB = 7.95； M = 11 时，得到 256 个数字码， ENOB = 7.93。 采样 1024 个点 M = 127 时，得到 256 个数字码， ENOB = 7.99； M = 11时，得到 256 个数字码， ENOB = 7.97。 输入为斜波信号 由于斜波信号为均匀分布，对 B 位理想 ADC，满足相干采样，采集 \\(N=2^B\\) 个点，足以获得输入范围内的所有数字码。 例如，取一个 8 位理想 ADC 采样 256 个点 M = 127 时，得到 256 个数字码； M = 11时，得到 256 个数字码。 采样 512 个点 M = 251 时，得到 256 个数字码； M = 11 时，得到 256 个数字码。 采样 1024 个点 M = 127 时，得到 256 个数字码； M = 11时，得到 256 个数字码。 小结 即使采用了相干采样的激励条件，考虑实际输入信号的概率分布特性，并非所有满摆幅的信号形式都可以在 N 个采样点内获得全部数字码的结果。这一特性对 ADC 动态性能的评估误差影响可能较小，因为其频谱结果给出的频域特性信息完备。但对于 ADC 的静态性能评估影响较大，影响失码的评估等基于数据概率密度的测试结果。 因此，通常建议对 ADC 的静态性能测试，采集多于 \\(4\\cdot 2^B\\) 的数据点，以获得更准确的性能；同时考虑，采样点数增加的过采样响应对 ADC 信噪比性能的影响，正确评估测试结果与 ADC 的实际性能的关系。 References Coherent Sampling vs. Window Sampling [Maxiam] A Tutorial in Coherent and Windowed Sampling with A/D Converters [Renesas] Coherent sampling [Wikipedia] 附录 相关算法 12345678910111213void coherence(f_in,f_s,N,M)double *f_in,*f_s;int N,*M;&#123;int K;K = (*f_s + N/2)/N;*M = (int)(*f_in)/(int)K/2*2+1;*f_s = K*N;*f_in = K*(*M);&#125;/* Sample Call *//* coherence(&amp;f_in,f_s,N,M); */&#125;/* End of Coherence Algorithm */ 123456789101112void unwrap_algorithm(tsample,unwrap,size_cap,M)int tsample[],unwrap[],M,size_cap;&#123;int i,j;for (i=0; i&lt;size_cap;i++)&#123;j = M*i % size_cap;unwrap[j] = tsample[i];&#125;/* Sample Call *//* unwrap_algorithm(tsample,unwrap,size_cap,f_bin); */&#125;/* End of Unwrap Algorithm */ 12345678void alias_algorithm(fbin,N)int *fbin,N;&#123;*fbin=fabs((float) ( *fbin - N *((*fbin+N/2)/N) ) );if (*fbin == N/2) *fbin = 0;/* Sample Call *//* alias_algorithm(&amp;fbin,M); */&#125;/* End of Alias Algorithm */","tags":[{"name":"DSP","slug":"DSP","permalink":"https://wiki.robin-ic.fun/tags/DSP/"},{"name":"Signals & Systems","slug":"Signals-Systems","permalink":"https://wiki.robin-ic.fun/tags/Signals-Systems/"}],"categories":[{"name":"Basics","slug":"Basics","permalink":"https://wiki.robin-ic.fun/categories/Basics/"},{"name":"Signals and Systems","slug":"Basics/Signals-and-Systems","permalink":"https://wiki.robin-ic.fun/categories/Basics/Signals-and-Systems/"}]},{"title":"使用 Overleaf 编辑 IEEE 论文","date":"2020-04-12T13:59:31.000Z","path":"wiki/8797/","text":"准备工作 为需要编辑的论文建立项目文件夹 将相关的资源至项目文件夹 文档内容 paper.tex 模板 IEEEtran.cls IEEEtran.bst IEEEabrv.bib 参考文献汇总 ref.bib 图片 可以建立文件夹 Figs 说明 LaTex中常见的文件格式有 .tex, .bib, .bst, .cls, .sty, .bbl 等 文档内容 .tex 文件也就是我们写文档内容的文件 排版格式相关 .cls 是类文件，通过文档最前面的 \\documentclass 命令导入 .sty 是包（风格）文件，通常使用 \\usepackage 导入 参考文献相关 .bib 是使用 bibligraphy 方式导入参考文献时，写参考文献的文档 .bbl 是 .bib 其编译之后形成的文件 .bst 设定参考文献出现在文末的方式 全局设置 (global ) 类设置 声明使用过的类为 IEEEtran，需要存在 IEEEtran.cls 文件 设置项 （更多选项见 IEEEtran.cls 内说明） journal: 规定文档类型（可选 conference, journal, technote, peerreview等） twoside: 规定左右页面排版，默认为 oneside，即左右页面使用相同排版，如页脚页眉，页码位置等等 1\\documentclass[journal,twoside]&#123;IEEEtran&#125; 包设置 声明使用的样式包 cite: 优化引用格式 graphicx: 插入图片格式 amsmath: 数学公式相关格式 array: 优化对齐格式 subfig: 设置子图及其标题 url: 优化链接格式 123456789101112131415161718192021222324252627% *** CITATION PACKAGES ***\\usepackage&#123;cite&#125;% *** GRAPHICS RELATED PACKAGES ***\\ifCLASSINFOpdf\\usepackage[pdftex]&#123;graphicx&#125;\\graphicspath&#123;&#123;Figs/&#125;&#125;\\DeclareGraphicsExtensions&#123;.pdf,.jpeg,.jpg,.png&#125;\\else\\fi% *** MATH PACKAGES ***\\usepackage&#123;amsmath&#125;\\interdisplaylinepenalty=2500% *** ALIGNMENT PACKAGES ***\\usepackage&#123;array&#125;% *** SUBFIGURE PACKAGES ***\\ifCLASSOPTIONcompsoc \\usepackage[caption=false,font=normalsize,labelfont=sf,textfont=sf]&#123;subfig&#125;\\else \\usepackage[caption=false,font=footnotesize]&#123;subfig&#125;\\fi% *** PDF, URL AND HYPERLINK PACKAGES ***\\usepackage&#123;url&#125; 修复断字 12% correct bad hyphenation here\\hyphenation&#123;op-tical net-works semi-conduc-tor&#125; 页眉页脚 （header and footnote） 声明页眉格式 插入位置 : 左右页面均插入页眉 : 仅右页面插入页眉 :: 仅左页面插入页眉 插入内容 第一个括号 {} 内容在标题页面和偶数页面显示 第二个括号 {} 内容只在除标题页面外，奇数页面显示 页眉默认大写，使用 指定使用小写的内容 12\\markboth&#123;IEEE Transactions on Circuits and Systems-II: Express Briefs, Vol. XX, No. X, XXX XXXX&#125;%&#123;Rongjin Xu \\MakeLowercase&#123;\\textit&#123;et al.&#125;&#125;: A 400 MHz, 8-bit, 1.75-ps Resolution Pipelined-Two-Step Time-to-Digital Converter with Dynamic Time Amplification&#125; 声明标题 可以使用 \\\\ 断行优化显示效果 1\\title&#123;A 400 MHz, 8-bit, 1.75-ps Resolution Pipelined-Two-Step Time-to-Digital Converter \\\\with Dynamic Time Amplification&#125; 插入标题 1\\maketitle 作者列表、脚注 (author list and footnotes) 一般期刊格式 使用 ~ 作为空格，声明该词组不被断行 使用 \\IEEEmembership&#123;Student~Member,~IEEE,&#125; 声明作者 IEEE 会员 结尾可以用注释符号 % 避免行末空格影响格式 1234\\author&#123;Rongjin~Xu,~\\IEEEmembership&#123;Student~Member,~IEEE,&#125; Yuting~Tu, Dawei~Ye,~\\IEEEmembership&#123;Member,~IEEE,&#125; and~C.-J.~Richard~Shi,~\\IEEEmembership&#123;Fellow,~IEEE&#125;% &lt;-this % stops a spacee 作者列表脚注 使用 \\thanks&#123;&#125; 声明作者信息脚注 12345678\\thanks&#123;R. Xu, Y. Tu and D. Ye are with theState Key Laboratory of ASIC and Systems, Fudan University, Shanghai, China,201203, and also with the Institute of Brain-Inspired Circuits and Systems (iBiCAS),Fudan University, Shanghai, China, 201203.&#125;% &lt;-this % stops a space\\thanks&#123;C. –J. R. Shi is with the Department of Electrical and Computer Engineering,University of Washington, Seattle WA 98195, USA.&#125;% &lt;-this % stops a space\\thanks&#123;Manuscript received April 19, 2005; revised August 26, 2015.&#125;&#125;&#125; 一般会议格式 按具体会议格式要求，下面以 RFIC 2020 为例 作者列表和信息在 块 \\RFICauthot 中声明 姓名在 块 \\RFICauthorblockNAME&#123;&#125; 中声明 标记在 姓名块 中 用 \\RFICauthorrefmark&#123;&#125; 中声明 1234567891011121314151617181920212223\\RFICauthor&#123;%%\\RFICauthorblockNAME&#123;% Author NamesJ. Clerk Maxwell\\RFICauthorrefmark&#123;\\#1&#125;,Charles Darwin\\RFICauthorrefmark&#123;\\$&#125;,Michael Faraday\\RFICauthorrefmark&#123;*\\textasciicircum2&#125;,Andr&#123;\\&#x27;e&#125; M. Amp&#123;\\`e&#125;re\\RFICauthorrefmark&#123;\\#3&#125;&#125;% end of \\RFICauthorblockNAME\\\\%%\\RFICauthorblockAFFIL&#123;% Author Affiliations\\RFICauthorrefmark&#123;\\#&#125;My Lab, My University, USA\\\\\\RFICauthorrefmark&#123;\\$&#125;Gollum World, New Zealand\\\\\\RFICauthorrefmark&#123;*&#125;My Research, Australia\\\\\\RFICauthorrefmark&#123;\\textasciicircum&#125;SolarSolar, Australia&#125;% end of \\RFICauthorblockAFFIL\\\\%%\\RFICauthorblockEMAIL&#123;% Author Emails\\RFICauthorrefmark&#123;1&#125;J.Clerk.Maxwell@my-uni.edu, \\RFICauthorrefmark&#123;2&#125;michael@mr.com.au, \\RFICauthorrefmark&#123;3&#125;Ampere@my-uni.edu&#125;% end of \\RFICauthorblockEMAIL%&#125;% end of \\RFICauthor 简介与关键词 (abstract and keywords) 简介 123\\begin&#123;abstract&#125; text\\end&#123;abstract&#125; 关键词 参考关键词 123\\begin&#123;IEEEkeywords&#125; keywords\\end&#123;IEEEkeywords&#125; 正文与分节 (text and section) 文档内容全部包含在 块 document 中，包括 标题 作者列表与脚注 正文 致谢 附录 参考文献 作者简历 12345\\begin&#123;document&#125;all contents\\end&#123;document&#125;&#125; 期刊论文开头需要使用特殊格式 dropletter，即第一个单词大写，第一个字母占两行。会议论文中通常没有该要求。 1\\IEEEPARstart&#123;T&#125;&#123;ime&#125; 有标题序号的分节使用 \\section&#123;title&#125;\\label&#123;label_name&#125;&#123;&#125; ，如正文的分节; 无标题序号的分节使用 \\section*&#123;title&#125;\\label&#123;label_name&#125;&#123;&#125; ，如致谢、附录等。 如无需引用，标签可省略。 1\\section&#123;The Proposed Pipelined-Two-Step TDC Architecture&#125; 更低级别分节 使用 \\subsection&#123;title&#125;\\label&#123;label_name&#125;&#123;&#125;。 1\\subsection&#123;Overall architecture&#125; 图片 (figure) 图片的插入使用 graphicx 包实现 块命令为 \\begin&#123;figure&#125; 单栏图片 \\begin&#123;figure&#125; 跨栏图片 \\begin&#123;figure*&#125; 插入单个图片 命令为 \\includegraphics[options]&#123;file_name&#125; 插入标题命令为 \\caption&#123;text&#125; 插入标签命令为 \\label&#123;&#125; 插入子图 命令为 \\subfloat[sub_caption]&#123;\\includegraphics[options]&#123;file_name&#125; 子图标题 通常子图只编号，如 a，b 等 则子图标题留空即可，如 [] 子图之间可以使用 \\hfil 增加间隔空间 插入组图标题和标签等，同上 单栏图片 1234567% floating figure using the graphicx package\\begin&#123;figure&#125;[!t]\\centering\\includegraphics[width=2.5in]&#123;cat1&#125;\\caption&#123;Simulation results for the network.&#125;\\label&#123;fig_sim1&#125;\\end&#123;figure&#125;&#125; 跨栏图片 12345678910\\begin&#123;figure*&#125;[!t]\\centering\\subfloat[Case I]&#123;\\includegraphics[width=2.5in]&#123;cat1&#125;%\\label&#123;fig_first_case&#125;&#125;\\hfil\\subfloat[Case II]&#123;\\includegraphics[width=2.5in]&#123;cat1&#125;%\\label&#123;fig_second_case&#125;&#125;\\caption&#123;Simulation results for the network.&#125;\\label&#123;fig_sim2&#125;\\end&#123;figure*&#125;&#125; 表格 (table) 表格块 table 插入 插入单栏表格 \\begin&#123;table&#125; 插入跨栏表格\\begin&#123;table*&#125; 表格标题 \\caption&#123;title} 引用标签 \\label&#123;table_label&#125; 格式设置 增加行空间 \\renewcommand&#123;\\arraystretch&#125;&#123;1.3&#125; 表格整体居中 \\centering 表格内容 \\begin&#123;tabular&#125;&#123;|c||c|&#125; 单元格对齐设置 &#123;|l|c|r|&#125; 通过添加 | 来表示是否需要绘制竖线 行间横线 \\hline 内容分隔符 &amp; 换行 \\\\ 其他复杂表格格式可以通过相关命令实现 单栏表格 12345678910111213\\begin&#123;table&#125;[!t]\\renewcommand&#123;\\arraystretch&#125;&#123;1.3&#125;\\caption&#123;An Example of a Table&#125;\\label&#123;table_example&#125;\\centering\\begin&#123;tabular&#125;&#123;|c||c|&#125;\\hlineOne &amp; Two\\\\\\hlineThree &amp; Four\\\\\\hline\\end&#123;tabular&#125;\\end&#123;table&#125;e 12345678910111213141516171819202122\\setlength&#123;\\tabcolsep&#125;&#123;1.25mm&#125;%\\renewcommand&#123;\\arraystretch&#125;&#123;1.2&#125;% for the vertical padding of table cells\\newcommand&#123;\\CPcolumnonewidth&#125;&#123;not used&#125;%\\newcommand&#123;\\CPcolumntwowidth&#125;&#123;23mm&#125;%\\newcommand&#123;\\CPcolumnthreewidth&#125;&#123;12mm&#125;%\\newcommand&#123;\\CPcolumnfourwidth&#125;&#123;33mm&#125;%\\begin&#123;table&#125;\\caption&#123;Font sizes for papers. Table caption with more than one line must be justified. Table caption with just one line must be centered.&#125;\\small% RFIC: need this to get the 9pt text size in table cells % TODO is correct ?\\centering\\begin&#123;tabular&#125;&#123;|l|l|l|l|&#125;\\hline\\multirow&#123;2&#125;&#123;6mm&#125;&#123;\\parbox&#123;8mm&#125;&#123;&#123;\\bfseries Font Size&#125;&#125;&#125; &amp; \\multicolumn&#123;3&#125;&#123;c|&#125;&#123;\\raisebox&#123;-0.25mm&#125;&#123;\\bfseries Appearance (in Times New Roman or Times)&#125;&#125;\\\\ \\cline&#123;2-4&#125;&amp; \\raisebox&#123;-0.25mm&#125;&#123;regular&#125; &amp; \\raisebox&#123;-0.25mm&#125;&#123;\\bfseries bold&#125; &amp; \\raisebox&#123;-0.25mm&#125;&#123;\\itshape italic&#125; \\\\ \\hline8 &amp; \\parbox[t]&#123;\\CPcolumntwowidth&#125;&#123;\\strut table caption,\\\\figure caption,\\\\figure label,\\\\reference item\\strut&#125; &amp; &amp; reference item (partial)\\\\ \\hline9 &amp; cell in a table &amp; \\parbox[t]&#123;\\CPcolumnthreewidth&#125;&#123;abstract, keywords&#125; &amp; \\parbox[t]&#123;\\CPcolumnfourwidth&#125;&#123;also in bold:\\\\abstract section heading,\\\\keywords section heading\\strut&#125; \\\\ \\hline10 &amp; \\parbox[t]&#123;\\CPcolumntwowidth&#125;&#123;level-1 heading,\\\\paragraph,\\\\equation\\strut&#125; &amp; &amp; \\parbox[t]&#123;\\CPcolumnfourwidth&#125;&#123;level-2 heading,\\\\level-3 heading&#125; \\\\ \\hline12 &amp; \\parbox[t]&#123;\\CPcolumntwowidth&#125;&#123;&#123;author name&#125;,\\\\author affiliation,\\\\email address\\strut&#125; &amp; &amp; \\\\ \\hline18 &amp; title &amp; &amp; \\\\ \\hline\\end&#123;tabular&#125;\\label&#123;tab:fontsizes&#125;\\end&#123;table&#125;&#125;% end of group enclosing the table 跨栏表格 123456789101112131415161718192021222324252627282930\\setlength&#123;\\tabcolsep&#125;&#123;1mm&#125;%\\newcommand&#123;\\CPcolumnonewidth&#125;&#123;50mm&#125;%\\newcommand&#123;\\CPcolumntwowidth&#125;&#123;91mm&#125;%\\newcommand&#123;\\CPcell&#125;[1]&#123;\\hspace&#123;0mm&#125;\\rule[-0.3em]&#123;0mm&#125;&#123;1.3em&#125;#1&#125;%\\newcommand&#123;\\CPcellbox&#125;[1]&#123;\\parbox&#123;90mm&#125;&#123;\\hspace&#123;0mm&#125;\\rule[-0.3em]&#123;0mm&#125;&#123;1.3em&#125;#1\\strut&#125;&#125;%\\begin&#123;table*&#125;\\caption&#123;Main predefined styles in WORD. Table which spans 2 columns must be placed either at top of a page or at bottom of a page.&#125;\\small% need this to get the 9pt text size in table cells\\centering\\begin&#123;tabular&#125;&#123;|l|l|&#125;\\hline\\parbox&#123;\\CPcolumnonewidth&#125;&#123;\\CPcell&#123;\\bfseries Style Name&#125;&#125; &amp; \\parbox&#123;\\CPcolumntwowidth&#125;&#123;\\CPcell&#123;\\bfseries To Format \\ldots&#125;&#125; \\\\ \\hline\\CPcell&#123;RFIC Title&#125; &amp; \\CPcell&#123;title&#125; \\\\ \\hline\\CPcell&#123;RFIC Author Block&#125; &amp; \\CPcell&#123;author name, author affiliation, author email address&#125; \\\\ \\hline\\CPcell&#123;RFIC Author Block + Superscript&#125; &amp; \\CPcellbox&#123;affiliation marker or email address marker after an author name,\\\\ marker before an affiliation or an email address&#125; \\\\ \\hline\\CPcell&#123;RFIC Abstract/Keywords&#125; &amp; \\CPcell&#123;abstract, keywords&#125; \\\\ \\hline\\CPcell&#123;RFIC Abstract/Keywords + Italic&#125; &amp; \\CPcell&#123;abstract section heading, keywords section heading&#125; \\\\ \\hline\\CPcell&#123;RFIC Heading 1&#125; &amp; \\CPcell&#123;1st level section heading&#125; \\\\ \\hline\\CPcell&#123;RFIC Heading 2&#125; &amp; \\CPcell&#123;2nd level section heading&#125; \\\\ \\hline\\CPcell&#123;RFIC Heading 3&#125; &amp; \\CPcell&#123;3rd level section heading&#125; \\\\ \\hline\\CPcell&#123;RFIC Paragraph&#125; &amp; \\CPcell&#123;paragraph&#125; \\\\ \\hline\\CPcell&#123;RFIC Figure&#125; &amp; \\CPcell&#123;figure to be centered&#125; \\\\ \\hline\\CPcell&#123;RFIC Figure Label&#125; &amp; \\CPcell&#123;label placed below a component of a figure, e.g. (a) in Fig.2&#125; \\\\ \\hline\\CPcell&#123;RFIC Caption Single-Line&#125; &amp; \\CPcell&#123;figure or table caption containing one line&#125; \\\\ \\hline\\CPcell&#123;RFIC Caption Multi-Lines&#125; &amp; \\CPcell&#123;figure or table caption containing more than one line&#125; \\\\ \\hline\\CPcell&#123;RFIC Ack/Ref Heading&#125; &amp; \\CPcell&#123;acknowledgment section heading, references section heading&#125; \\\\ \\hline\\CPcell&#123;RFIC Reference Item&#125; &amp; \\CPcell&#123;reference item&#125; \\\\ \\hline\\end&#123;tabular&#125;\\label&#123;tab:wordstyles&#125;\\end&#123;table*&#125;&#125; 公式 (equation) 123\\begin&#123;equation&#125;A+B=C \\label&#123;lable_name&#125;\\end&#123;equation&#125; 标签与引用 (label and citation) 分节、公式图片、表格等内容可以使用 标签声明\\label&#123;label_name&#125;，引用则使用 \\cite&#123;label_name&#125; 致谢与附录 (acknowledgement and appendix ) 致谢 致谢采用无编号分节格式 \\section*&#123;title&#125;。 12\\section*&#123;Acknowledgment&#125;This work is supported by the Science and Technology Commission of Shanghai Municipality under Grant 2018SHZDZX01. 附录 附录采用命令块 \\appendices 内部可以分节 \\section&#123;title&#125; 1234567\\appendices\\section&#123;Proof of the First Zonklar Equation&#125;Appendix one text goes here.\\section&#123;&#125;Appendix two text goes here.. 参考文献 (reference) 使用 bibtex 管理参考文献使用 bibtex 依赖文件 全局格式 IEEEtran.bts IEEEabrv.bib 参考文献列表 refbib.bib 官方示例 IEEEexample.bib 各学术网站与管理软件都提供导出 bibtex 功能 格式控制 自动根据引用顺序给文献编号 出版物名称控制 官方参考名称管理 缩写使用 IEEEabrv 全称使用 IEEEfull 不提供会议名称缩写 可以根据格式要求自定义管理 在参考文献列表中使用 标记符号即可 标记符号使用 ，如 journal=IEEE_J_CASII 12\\bibliographystyle&#123;IEEEtran&#125;\\bibliography&#123;IEEEabrv, refbib&#125; 参考文献列表实例 123456789101112131415161718192021222324@IEEEtranBSTCTL&#123;IEEEexample:BSTcontrol, CTLuse_article_number = &quot;yes&quot;, CTLuse_paper = &quot;yes&quot;, CTLuse_url = &quot;yes&quot;, CTLuse_forced_etal = &quot;no&quot;, CTLmax_names_forced_etal = &quot;10&quot;, CTLnames_show_etal = &quot;1&quot;, CTLuse_alt_spacing = &quot;yes&quot;, CTLalt_stretch_factor = &quot;4&quot;, CTLdash_repeated_names = &quot;yes&quot;, CTLname_format_string = &quot;&#123;f.~&#125;&#123;vv~&#125;&#123;ll&#125;&#123;, jj&#125;&quot;, CTLname_latex_cmd = &quot;&quot;, CTLname_url_prefix = &quot;[Online]. Available:&quot;&#125;@ARTICLE&#123;ref_yizhe, author=&#123;Y. &#123;Hu&#125; and T. &#123;Siriburanon&#125; and R. B. &#123;Staszewski&#125;&#125;,journal=IEEE_J_CAS,title=&#123;Intuitive Understanding of Flicker Noise Reduction via Narrowing of Conduction Angle in Voltage-Biased Oscillators&#125;,year=&#123;2019&#125;, volume=&#123;66&#125;, number=&#123;12&#125;, pages=&#123;1962-1966&#125;,&#125; 简单罗列参考文献格式控制 根据 bibitem&#123;&#125; 顺序编号 使用 \\emph&#123;text&#125; 规定出版物名称的斜体 使用 一些空间控制命令，具体参看类声明文件 IEEEtran.cls 12345\\begin&#123;thebibliography&#125;&#123;1&#125;\\bibitem&#123;IEEEhowto:kopka&#125;H.~Kopka and P.~W. Daly, \\emph&#123;A Guide to \\LaTeX&#125;, 3rd~ed.\\hskip 1em plus 0.5em minus 0.4em\\relax Harlow, England: Addison-Wesley, 1999.\\end&#123;thebibliography&#125;&#125; 作者简历 (biography) 插入作者简介 包含照片的作者简介 命令块 \\begin&#123;IEEEbiography&#125; 选项 [] 使用 \\includegraphics 插入照片 无照片的作者简介 命令块 \\begin&#123;IEEEbiographynophoto&#125; 格式控制 使用 \\vfill 调整简介块的位置 包含照片的作者简介 123\\begin&#123;IEEEbiography&#125;[&#123;\\includegraphics[width=1in,height=1.25in,clip,keepaspectratio]&#123;photo_file&#125;&#125;]&#123;author_name&#125;Biography text here.\\end&#123;IEEEbiography&#125; 不含照片的作者简介 123\\begin&#123;IEEEbiographynophoto&#125;&#123;author_name&#125;Biography text here.\\end&#123;IEEEbiographynophoto&#125; 其他控制命令 ~ 作为空格，声明该词组不被断行 增加空间 \\hfill \\vfill 另起一页，平衡位置 \\newpage References IEEE author center The IEEEtran Homepage CTAN Package IEEEtran IEEE editorial style manual for authors IEEE reference guide","tags":[{"name":"writing","slug":"writing","permalink":"https://wiki.robin-ic.fun/tags/writing/"},{"name":"overleaf","slug":"overleaf","permalink":"https://wiki.robin-ic.fun/tags/overleaf/"},{"name":"Latex","slug":"Latex","permalink":"https://wiki.robin-ic.fun/tags/Latex/"}],"categories":[{"name":"Tools","slug":"Tools","permalink":"https://wiki.robin-ic.fun/categories/Tools/"},{"name":"Writing","slug":"Tools/Writing","permalink":"https://wiki.robin-ic.fun/categories/Tools/Writing/"}]},{"title":"Hexo 目录与文件简要说明","date":"2020-03-28T15:35:46.000Z","path":"wiki/46484/","text":"在站点目录中，有几个文件值得注意，它们的具体功能与使用可以参考 hexo 的官方网站： .gitignore 文件定义了 git commit 不包含的内容，如 node.js 的插件安装文件夹，node_modules 和预览文件夹 public 等等，可以充分利用该文件定义部署后无需上传的内容，如密钥文件，涉及隐私的文件等等。 scaffolds 文件夹内包含了样式模板，可以用于定义不同新建不同页面包含的初始内容，如标题，标签，分类，日期，链接等等。 themes 文件夹内含主题配置文件，默认不会上传，但如果要将整个站点上传至仓库，如实现自动部署等等，则需要通过配置 .gitignore 文件，将该文件夹一并上传。 package.json 文件记录了站点生成过程中使用的所有插件，以及其版本号。其中，站点生成最基本的依赖为 hexo-generator 系列插件，如果该插件调用错误，则无法生成站点发布所需要的 index.html 文件，表现为站点发布后，访问 user.github.io 页面提示找不到页面，或 404 错误。 Hexo 生成与发布常见问题都可以通过 hexo s 预览提示中看到。如常见的 找不到 / 通常是因为没有正确安装插件，导致未生成静态页面 index.html 导致。 正确的站点创建操作应当为： npm 安装 hexo npm 安装 依赖插件 hexo i 初始化站点 hexo g 生成站点 记录在 package.json 中的插件，会在生成站点时自动联网安装，但如果是在本地第一次新建站点，需要先行安装依赖插件，需要注意使用参数 --save 或最后输入一次 npm install 保证正确安装。安装后的插件存放在 node_modules 文件夹，通常无需发布上传。 安装 hexo： 12npm install -g hexo-clinpm install 安装 插件 1npm install hexo-deployer-git --save 或 12npm install hexo-deployer-gitnpm install 升级插件： 1npm update References Hexo 搭建个人博客指南","tags":[],"categories":[{"name":"Website","slug":"Website","permalink":"https://wiki.robin-ic.fun/categories/Website/"}]},{"title":"使用 Hexo 生成与配置站点","date":"2020-03-28T15:31:18.000Z","path":"wiki/47926/","text":"Hexo 安装完成后，进入博客存放的文件夹，初始化我们的博客，输入： 1hexo init blog 其中 blog 博客的名字。为了检测我们的网站雏形，分别按顺序输入以下三条命令： 123hexo new test_my_sitehexo ghexo s 其中第一句为在博客中新增一篇帖子 test_my_site ，第二句为编译生成博客，第三句为在本地启动预览服务。 完成后，打开浏览器输入地址： 1localhost:4000 可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。 hexo-preview 常用 hexo 命令： 123456789101112131415npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客# 命令简写hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章hexo g &#x3D;&#x3D; hexo generate #生成hexo s &#x3D;&#x3D; hexo server #启动服务预览hexo d &#x3D;&#x3D; hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 References GitHub+Hexo 搭建个人网站详细教程","tags":[{"name":"hexo","slug":"hexo","permalink":"https://wiki.robin-ic.fun/tags/hexo/"},{"name":"website","slug":"website","permalink":"https://wiki.robin-ic.fun/tags/website/"}],"categories":[{"name":"Website","slug":"Website","permalink":"https://wiki.robin-ic.fun/categories/Website/"}]},{"title":"安装 Hexo","date":"2020-03-28T15:25:07.000Z","path":"wiki/52045/","text":"Hexo是一款基于 Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。Hexo同时也是GitHub上的开源项目，参见：hexojs/hexo 如果想要更加全面的了解Hexo，可以到其官网 Hexo 了解更多的细节，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。 Hexo 基于 Node.js，Node.js下载地址：Download | Node.js。下载安装包，注意安装 Node.js 会包含环境变量及 npm 的安装，安装后，检测 Node.js 是否安装成功，在命令行中输入node -v: nodejs-v 检测npm是否安装成功，在命令行中输入npm -v : npm-v 到此，安装Hexo的环境已经全部搭建完成。 Hexo 就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为 blog ，Hexo 框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住 shift 键，右击鼠标点击命令行，可以使用 Git-bash 或其他 shell。 使用 npm 命令安装 Hexo，输入： 1npm install -g hexo-cli 至此，Hexo 环境配置完毕。 References GitHub+Hexo 搭建个人网站详细教程","tags":[{"name":"hexo","slug":"hexo","permalink":"https://wiki.robin-ic.fun/tags/hexo/"},{"name":"website","slug":"website","permalink":"https://wiki.robin-ic.fun/tags/website/"}],"categories":[{"name":"Website","slug":"Website","permalink":"https://wiki.robin-ic.fun/categories/Website/"}]},{"title":"安装 Git 与使用 Github","date":"2020-03-28T06:35:36.000Z","path":"wiki/64853/","text":"Git 和 Github 简介 Git 是一个开源的分布式版本控制系统。而 GitHub 本质上是一个代码托管平台，它提供的是基于 Git 的代码托管服务。对于一个团队来说，即使不使用 GitHub，他们也可以通过自己搭建和管理 Git 服务器来进行代码库的管理，甚至还有一些其它的代码托管商可供选择，如 GitLab，BitBucket 等。值得一提的是 Git 作为一个开源项目，其代码本身就被托管在 GitHub 上，如果您感兴趣，可以上去一观其真容：Git 项目地址。 Git 是一个源代码版本控制系统，一个可管理、追溯项目源码的工具。 GitHub 是一个提供 Git 仓库托管服务的平台。 简而言之，Git 是一个工具，而GitHub 是一个托管平台。 环境准备 创建 Github 账号 登录到 GitHub,如果没有 GitHub 帐号，使用你的邮箱注册GitHub帐号，点击 GitHub 中的 New repository 创建新仓库。如果使用 Github 默认的 Pages 作为自己的网站，仓库名应该为：用户名.github.io，用户名使用 GitHub 帐号名称代替，这是固定写法。 安装 Git 从Git官网下载：Git - Downloading Package ，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的 Git 与GitHub 帐号绑定，鼠标右击打开 Git Bash。 Git_bash 设定 Github 作为远程仓库 设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 上述设置邮箱也可以使用 Github 提供的 public profile email，即 用户名@users.noreply.github.com。相关设置可以在自己的 Github 设置 中设定。 使用 ssh 访问 Github 下面设定使用 ssh 访问自己的 Github。首先 生成ssh密钥文件： 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后直接三个回车即可，默认不需要设置密码 然后找到生成的 .ssh 的文件夹中的 id_rsa.pub 密钥，将内容全部复制。 ssh-kegen 如果以后使用其他 shell 的 ssh 进行 Git 操作，如 cgywin 或 WSL 环境，可以将包含该密钥对的 .ssh 复制到 home 目录即可。 打开 GitHub_Settings_keys 页面，新建 new SSH Key。 new-github-sshkey Title 为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击 Add SSH key。 在Git Bash中检测 GitHub 公钥设置是否成功，输入ssh git@github.com ： ssh-github 如上则说明成功。这里之所以设置 GitHub 密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在 GitHub 上，私钥放置在自己的电脑里。GitHub 要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了 ssh，当你推送的时候，git 就会匹配你的私钥跟 GitHub 上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。 References Git 和 GitHub 基础简介 廖雪峰-Git教程","tags":[{"name":"git","slug":"git","permalink":"https://wiki.robin-ic.fun/tags/git/"},{"name":"github","slug":"github","permalink":"https://wiki.robin-ic.fun/tags/github/"},{"name":"tools","slug":"tools","permalink":"https://wiki.robin-ic.fun/tags/tools/"}],"categories":[{"name":"Tools","slug":"Tools","permalink":"https://wiki.robin-ic.fun/categories/Tools/"},{"name":"Git","slug":"Tools/Git","permalink":"https://wiki.robin-ic.fun/categories/Tools/Git/"}]},{"title":"StrongArm 比较器","date":"2020-02-17T03:34:38.000Z","path":"wiki/19262/","text":"关键 StrongARM 锁存器的 基本结构和原理 组成：钟控开关，输入差分对，交叉耦合对 工作过程 4 个工作阶段 预充电 (钟控开关 \\(S_1-S_4\\)) 放大 (输入差分对 \\(M_1,M_2\\)) 再生输出 放大：\\(M_3,M_4\\) 交叉耦合 NMOS 导通 正反馈：\\(M_5,M_6\\) 交叉耦合 PMOS 导通 各个晶体管的作用 \\(M_3,M_4\\) 切断静态电流 \\(M_5,M_6\\) 恢复输出高电平 \\(S_1,S_2\\) 清除状态，设置放大模式初始状态 \\(M_8\\) 保证 \\(P,Q\\) 电压相等，避免动态失调 \\(S_3,S_4\\) 预充电 非理想性分析 失调 \\(M_1,M_2\\) 贡献主要失调 其他晶体管对失调的贡献受到输入参考电压增益抑制 主要失调校正原理：调整 \\(P,Q\\) 的电容，实现不同的放电速率，以补偿随机失调误差 电噪声 噪声机制 \\(M_1,M_2\\) 和 \\(kT/C\\) 贡献主要噪声 其他晶体管对噪声的贡献受到输入参考电压增益抑制 噪声仿真方法 输入小差分电压差 处于亚稳态条件附近 统计瞬态仿真输出 0/1 出现的次数 倒推输入参考噪声的高斯分布方差 回踢 锁存器工作时从输入汲取电流 通过电容耦合回输入 电源瞬态 锁存器工作时可能从电源汲取峰值较大电流 背景 StrongARM 锁存器拓扑可广泛用作 Sense Amplifier，比较器，或者作为是具有高灵敏度的锁存器。 \"StrongARM\" 一词是为了纪念 Digital Equipment Corporation 的 StrongARM 微处理器中使用此电路，但其基本结构最初是由东芝的 Kobayashi 等人介绍的。 StrongARM 锁存器之所以流行，有以下三个原因： 零静态功率； 直接产生轨到轨输出； 其输入参考失调主要来自一对差分。 概述 Fig.1 (a) 显示了原始的 StrongARM 锁存器，(b) 为其中一种修改，其中的锁存器包括一对钟控的差分对 \\(M_1 - M_2\\)，两个交叉耦合对 \\(M_3 - M_4\\) 和 \\(M_5 - M_6\\)，以及4个预充电开关 \\(S_1 - S_4\\)。 strongarm_fig1.png 工作过程 根据输入 \\(V_{in1}-V_{in2}\\) 的极性，电路在 X 和 Y 节点提供输出轨到轨的输出。我们可以将其工作描述为 4 个阶段。 第一阶段， \\(CK\\) 为低；\\(M_1\\) 和 \\(M_2\\) 关断，\\(P, Q, X, Y\\) 被预充电至 \\(VDD\\)，电路可以简化至 Fig.2(a) 所示。 第二阶段，\\(CK\\) 变为高，开关 \\(S_1 - S_4\\) 关断，\\(M_1\\) 和 \\(M_2\\) 导通，汲取与 \\(V_{in1}-V_{in2}\\) 成正比的电流。由于 \\(M_3 - M_6\\) 原来为关断，电流从 \\(C_P\\) 和 \\(C_Q\\) 流出，使得 \\(|V_P-V_Q|\\) 升高，并且可能超过 \\(|V_{in1}-V_{in2}|\\)，即这个阶段可以提供电压增益，称之为放大模式，如 Fig.2(b) 所示。因为该阶段尾电流相对恒定，\\(|V_P-V_Q|\\approx(g_{m1,2}|V_{in1}-V_{in2}|/C_{P,Q})t\\)，其中 \\(g_{m1,2}\\) 为 \\(M_1\\) 和 \\(M_2\\) 的小信号跨导，\\(C_{P,Q}=C_P=C_Q\\)。 第三阶段，随着 \\(V_P\\) 和 \\(V_Q\\) 下降至低于 \\(V_{DD}-V_{THN}\\)，交叉耦合的 NMOS 管导通，\\(M_1\\) 和 \\(M_2\\) 的部分漏电流从 \\(X,Y\\) 流出，如 Fig.2(c) 所示。放大模式的持续时间约为 \\((C_{P,Q}/I_{CM})V_{THN}\\)，其中 \\(I_{CM}\\) 为每个电容中流出的共模电流。此时，电压增益大约为 \\(A_V \\approx \\dfrac{g_{m1,2}V_{THN}}{I_{CM}}\\)。锁存器在第三阶段的行为可以通过 Fig.2(d) 中的等效电路进行分析。锁存器的再生过程是形式为 \\(exp(t/\\tau_{reg})\\) 的自然响应，其中 \\(\\tau_{reg}\\) 为再生时间常数，即 \\(\\tau_{reg} = \\dfrac{C_{X,Y}}{g_{m3,4}(1-C_{X,Y}/C_{P,Q})}\\)。有趣的是，\\(C_{P}\\) 和 \\(C_{Q}\\) 造成的退化，以系数 \\((1-C_{X,Y}/C_{P,Q})\\) 增加了 \\(\\tau_{reg}\\)。实际上，由于 \\(C_{X,Y}\\) 包括了比较器后级电路的输入电容，因此会大于 \\(C_{P,Q}\\)，交叉耦合的 NMOS 管在这一阶段只提供较小的退化。 第四阶段，输出电压 \\(V_X, V_Y\\) 继续下降直至 \\(V_{DD}-|V_{THP}|\\)，此时 \\(M_5 , M_6\\) 导通，如 Fig.2(e) 所示，交叉耦合管的正反馈使得一个输出回到 \\(V_{DD}\\)，而另一个继续下降到 0。 StrongARM 锁存器在其中半个时钟的输出是无效的 \\(V_X=V_Y=V_{DD}\\)，为了保证后续的逻辑，需要在其后使用 RS锁存器。 StrongARM 锁存器的功耗主要来源于节点电容的充放电，大约为 \\(f_{CK} \\cdot (2\\cdot C_{P,Q}+C_{X,Y}\\cdot V_{DD})\\)，其中 \\(f_{CK}\\) 为时钟频率，系数 2 表示 \\(P,Q\\) 两个节点每个周期都会从 \\(V_{DD}\\) 放电至地。 strongarm_fig2.png 分析讨论 各个晶体管的作用 \\(M_3-M_4\\) 切断第四阶段结束 \\(V_{DD}\\) 和 地 之间的直流路径，避免静态的漏电流。如 Fig.3 所示，如果没有\\(M_3\\) 和 \\(M_4\\)，假设在共模电压附近 \\(V_{in1}-V_{in2}=100 mV\\)， 当时钟有效时，\\(V_X\\) 下降 \\(V_Y\\) 上升，\\(M_5\\) 关断，但是 \\(M_6\\) 导通，从 \\(V_{DD}\\) 到地存在静态电流。若输入为轨到轨的电压，\\(|V_{in1}-V_{in2}|=V_{DD}\\)，\\(M_1\\) 和 \\(M_2\\) 不会同时导通，则不存在该现象。 \\(M_5-M_6\\) 主要用于恢复输出节点\\(X, Y\\) 到 \\(V_{DD}\\)，如果没有它们，当 \\(|V_{in1}-V_{in2}|\\) 很小时，共模电压会从 \\(X\\) 或 \\(Y\\) 放电，输出的高电平被衰减。 开关 \\(S_1, S_2\\) 主要有两个作用 清除 \\(P,Q\\) 之前的状态，避免动态失调； 为各个节点提供初始电压 \\(V_{DD}\\)，使得在 \\(M_1,M_2\\)进入线性区之前提供放大模式。 Fig.1(a) 和 Fig.1(b) 的主要区别：是否使 \\(P,Q\\) 电压相等 预充电结束后，\\(M_8\\) 会关断 如果没有 \\(M_8\\) 动态失调会更严重 \\(V_P\\) 和 \\(V_Q\\) 会从 \\(V_{DD}-V_{THN}\\) 开始放电，电路只能提供很小的增益 \\(M_3-M_4\\) 会在增益实现前导通，因此会贡献更多的失调 \\(S_3-S_4\\) 将 \\(X, Y\\) 预充电至 \\(V_{DD}\\)，保证 \\(M_5-M_6\\) 在放大开始之前保持关断，从而减少他们对失调的贡献 strongarm_fig3.png 非理想性分析 失调 offset 当用作 sense amplifier 时，需要 StrongARM 实现足够小的输入等效失调电压。由于 \\(S_1-S_4\\) 实现的预充电保证了在 \\(M_3-M_6\\) 在初始状态下关断，减少了他们对失调的贡献。在一个典型的设计中,\\(M_3,M_4\\) 的失配参考到输入端，除以的系数约为 \\(A_V\\approx 4\\)，而 \\(M_5,M_6\\) 的系数约为 10，这样 \\(M_1,M_2\\) 成为失调的主导。 因为放大模式中，\\(C_{P,Q}\\) 的电荷流动提供了电压增益，因此可以通过制造 \\(C_P\\ne C_Q\\) 的不对称消除电路的失调。如 Fig.5 所示，通过在 \\(P,Q\\) 建立不同的放电速率实现失调调整。其中 \\(P,Q\\) 之间的电压差可以写作： \\[V_P - V_Q = -\\dfrac{g_{m1,2}}{2}\\cdot \\dfrac{C_P+C_Q}{C_P C_Q}(V_{in1}-V_{in2})t+\\dfrac{C_P-C_Q}{C_P C_Q}I_{CM}t\\] 可见放大模式时，\\(V_P-V_Q\\) 可以累积的电压失调为 \\((C_P-C_Q)/(C_P C_Q)I_{CM}t\\)，用于补偿锁存器的随机失调。当 \\(V_P,V_Q\\) 下降至低于 \\(V_{DD}-V_{THN}\\) 后，放大模式结束，其持续的时间约为 \\(t\\approx V_{THN}(C_P+C_Q)/(2I_{CM}\\)，其中 \\((C_P+C_Q)/2\\) 为近似值，因此其贡献的失调为 \\(V_{THN}(C_P/C_Q-C_Q/C_P)/2\\)。 为了实现失调消除，锁存器的输入端短接在一起，当时钟有效时，锁存器输出寄存器，调整 \\(C_P,C_Q\\) 的值。如果要实现大范围，高精度的失调消除，需要数量较多，取值较小单位电容，造成锁存器工作速度的下降和功耗的提高。 strongarm_fig5.png 电噪声 electronic noise 噪声分析 根据前面的失调分析可知，\\(S_1-S_4\\) 的预充电行为也会减少 \\(M_3-M_6\\)的电噪声贡献。主要的输入参考噪声来源于 \\(M_1-M_2\\)，\\(kT/C\\) 噪声则存在于 \\(S_1-S_2\\)，而其他晶体管的噪声只在增益显著增长后才会开始作用。 在放大模式中，如 Fig.2(b) 所示，该等效电路可以看作一个积分器，输出来自 \\(M_1-M_2\\) 的噪声。这部分噪声的方差随着时间增长： \\[E(V_{PQ}^2)=\\dfrac{8kT\\gamma g_{m1,2}}{C_{Q,P}^2}t\\] 放大模式持续的时间约为 \\((C_{P,Q}/I_{CM}V_{THN})\\)，\\(M_1-M_2\\) 在该模式下最终输出的噪声方差为： \\[\\sigma_{1.2}^2=\\dfrac{8kT\\gamma}{C_{P,Q}}\\cdot\\dfrac{g_{m1,2}V_{THN}}{I_{CM}}\\] 加上 \\(S_1-S_2\\) 的 \\(kT/C\\) 噪声的贡献，除以电压增益的平方，同时写作 \\(g_{m1,2} \\approx 2I_{CM}/(V_{GS}-V_{THN})_{1,2}\\)，则最终该模式下的的输入参考噪声为： \\[\\overline{V_{n,in}^2}=\\dfrac{(V_{GS}-V_{THN})_{1,2}}{V_{THN}}\\cdot [\\dfrac{4kT\\gamma}{C_{P,Q}}+\\dfrac{(V_{GS}-V_{THN})_{1,2}}{V_{THN}}\\cdot \\dfrac{kT}{2C_{P,Q}}]\\] 方括号中的第一项 \\(M_1-M_2\\) 贡献的噪声，通常比第二项大8倍，其他噪声源的定量分析可以参考文献 [4]。 锁存器噪声仿真方法 不限于 StrongARM 锁存器，比较器噪声仿真提出了有趣的问题。不同于小信号模拟电路，比较器并不直接提供一个输出噪声和一个输出噪声等效到输入需要除以的增益。简单来说，我们可以将比较器置于亚稳态条件（metastable condition）下进行小信号分析，但应考虑 StrongARM 锁存器的开关切换行为和噪声注入在输出开始变化之前就已经完成了。 strongarm_fig6.png 比较器的噪声系统仿真如下，见 Fig.6： 仿真器设置 带有噪声的瞬态仿真 假设比较器失调和差分输入电压为 0 给予仿真器多次有效的时钟 电路中的高斯噪声使得输出最终会从亚稳态中恢复，产生 0/1 输出的概率相等 应用一个小的差分输入 \\(V_S\\)（若干 mV），并重复仿真 因为 \\(V_S\\) 影响比较器的决策，“ 1”和“ 0” 出现的概率不相等 默认情况下，\\(V_S\\) 为正数，输出为 1 仅当以输入为基准的噪声小于负数 \\(-V_S\\) 时才输出 0 通过大量的时钟周期的仿真结果，推算噪声高斯改论分布 预测输出 0 的个数正比于高斯概率分布函数 \\(f_x(x)\\) 从 \\(-V_S\\) 至 \\(+\\infty\\) 的面积 根据仿真中 0/1 出现的次数 \\(n_0/n_1\\)，可以得到 \\[\\dfrac{\\int_{-\\infty}^{-V_S}f_x(x)dx}{1-\\int^{-V_S}_{-\\infty}f_x(x)dx}=\\dfrac{n_0}{n_1}\\] 输入参考噪声电压的平方即为 \\(f_x(x)\\) 的方差 \\(V_S\\) 的选择应该满足 \\(V_S\\) 足够大，使得 \\(n_0/n_1\\) 远离 1 \\(V_S\\) 足够小，避免 \\(n_0\\) 和 \\(n_1\\) 出现的次数过少而不具有统计意义 回踢和电源瞬态 kickback and supply transients StrongARM 锁存器工作时会从输入和电路汲取较大的瞬态电流。当大量比较器同时工作时，如 flash ADC 中的情况，这会造成较大的问题。 回踢 如 Fig.7 所示，输入产生的“回踢”电流来自多种机制，同时包括差分和共模分量。前者主要表现为\\(V_P, V_Q\\) 以不相等的速率下降至地，并通过 \\(C_{GD1},C_{GD2}\\)耦合至输入。当 \\(M_1,M_2\\) 进入线性区域，并且其栅极-漏极电容增加时，这种影响变得更加明显。 共模 CM 的反冲噪声电流大得多，并且当 \\(M_7\\) 开启时，开始从 \\(C_{GS1},C_{GS2}\\) 汲取其漏极电流，而当它关闭时，CK 通过 \\(C_{GD7}(\\approx C_{GS7})\\) 耦合到 \\(C_{GS1},C_{GS2}\\)。 通过为输入器件的漏极路径而非源极路径提供时钟，可以降低回踢噪声。如 Fig.8(a) 所示，这种机构使用了 \\(M_7,M_8\\) 来控制锁存器。但是，由于 \\(M_1,M2\\) 在放大模式下工作在线性区，因此降低了回踢噪声，但代价是输入失调较高。通过将 \\(M_3-M_4\\) 和 \\(M_7-M_8\\) 变宽可以避免此问题，但是，如 Fig.8(b) 所示，在预充电模式下，\\(A\\) 或 \\(B\\) 处的缓慢放电会导致 \\(V_P\\) 和 \\(V_Q\\) 较大的动态失调之间明显失衡。 strongarm_fig7.png 电源瞬态 如 Fig.1(b) 所示，电源瞬态电流源自 \\(S_1 - S_4\\) 的预充电行为。如果 \\(CK\\) 快速下降，\\(S_1 - S_4\\) 中的3个立即进入饱和区（第四个处于线性区域，因为其漏极电压等于 \\(V_{DD}\\)），并且从 \\(V_{DD}\\) 汲取大电流。设计的关键点是，由于电源的阻抗较低，即使是平均功率低的设计，可能仍从电源汲取高峰值的电流流。 strongarm_fig8.png References The StrongARM Latch [4] Noise analysis of regenerative comparators for reconfigurable ADC architectures","tags":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/tags/IC/"},{"name":"ADC","slug":"ADC","permalink":"https://wiki.robin-ic.fun/tags/ADC/"},{"name":"comparator","slug":"comparator","permalink":"https://wiki.robin-ic.fun/tags/comparator/"}],"categories":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/categories/IC/"},{"name":"ADC","slug":"IC/ADC","permalink":"https://wiki.robin-ic.fun/categories/IC/ADC/"}]},{"title":"Triple-Tail Comparator for high speed ADC","date":"2020-02-14T13:42:23.000Z","path":"wiki/26789/","text":"关键 速度、噪声 和 共模灵敏度 是高速比较器设计的关键参数，需要考虑它们之间的折衷 为了优化噪声以及对 latch kickback 噪声的隔离，需要为比较器提供增益级，即 preamplifier 预放大级可以提供增益，隔离噪声，同时还可以避免输入共模电压对再生时间的影响 第一级预放大决定了噪声性能；锁存级决定了带宽性能，即比较器的速度 多级比较器具有较大的门延时，因此在输入信号电压差值较大时，速度略低于单级比较器；但在输入信号电压差值较小时，速度具有较大的优势 背景 比较器是每一个高速 ADC 中的关键元件。它自身的噪声，kickback 噪声以及共模灵敏度在很大程度上决定了总精度。它的分辨能力对速度有重大影响，其整体设计使其成为总功率预算的重要组成部分。比较器的分辨时间、噪声是设计的两个主要参数，二者相互影响。因此，要特别注意改善这种折衷平衡。 概述 下图是 Leuven 在 JSSC 2018 发表的论文 “A 1.25-GS/s 7-b SAR ADC With 36.4-dB SNDR at 5 GHz Using Switch-Bootstrapping, USPC DAC and Triple-Tail Comparator in 28-nm CMOS” 中提出的一种 triple-tail 比较器。 triple_tail_cmp.png 它包括一个级联积分器作为第一前置放大器，然后是第二前置放大器，该第二前置放大器既作为积分器又作为锁存器，最后一级时动态配置驱动锁存级。多阶段配置打破了不同设计参数之间的折衷，为每个阶段提供了独立的优化。这使比较器可以实现高速和低噪声/失调。 第一级前置放大器定义噪声。 因此，它旨在提供低噪声/失调和高增益，以衰减后续级的噪声。在 \\(M_{IP}\\) / \\(M_{IN}\\) 的顶部放置了一个额外的 NMOS 共源共栅，以在集成期间将节点 XP / XN 与输入对的寄生电容隔离。共源共栅还可以将输入对与重置后在这些节点上生成的 kickback 隔离。 锁存级设置带宽。 因此，将其优化为具有非常低的时间常数 \\(\\tau_{comp}\\)。 第二个前置放大器抑制输出噪声并在锁存之前提供通过交叉耦合增强的信号增益， 从而将其再生时间降至最短。 中间器件 \\(M_{2P}\\) / \\(M_{2N}\\) 和 \\(M_{3P}\\) / \\(M_{3N}\\) 既用作增益级以提供对锁存器输出噪声的进一步屏蔽 ，又分别用作节点 YP / YN 和 OP / ON 的复位器件，从而无需额外的复位晶体管，减小了这些节点上的电容，从而进一步缩短了锁存器再生时间。 工作过程 当 \\(CLK\\) 为低电平（\\(\\overline{CLK}\\)为高电平）时，节点 XP / XN 和 OP / ON 将YP / YN 拉至地时将其复位为电源电压。当CLK变为高电平（ \\(\\overline{CLK}\\) 变为低电平）时，输入对的漏极电流 XP / XN 会根据输入信号以不同的斜率向接地放电，而节点 YP / YN 则由于以下原因而向电源充电，其斜率差增大额外的收益。同时，最后一个锁存器的 NMOS对被激活，下拉 OP / ON，由于中间级的跨导 \\(M_{2P}\\) / \\(M_{2N}\\) 和 \\(M_{3P}\\) / \\(M_{3N}\\)，斜率差进一步增大。当其中之一达到低于电源电压（对于超低 VTH 器件约为280 mV）的一个 PMOS 阈值时，就会发生闩锁。对于大的差分输入，由于其正反馈，第二级也充当锁存器，而最后一级可以看作是面向 SAR 逻辑的数字缓冲器。 分析讨论 该比较器的提取后性能已通过过载测试（ORT）进行了表征，这是压力最大的性能评估。在两个连续的10 GHz 周期中，差分输入在满量程信号和极性相反的很小信号之间切换。对于大输入，差分对将所有电流转向一侧，从而产生较大的差异，以供后续阶段分辨。当输入切换极性时，两个放大级必须在发生闩锁之前恢复并更改YP / YN的极性。 6.2 ps 的仿真 \\(\\tau_{comp}\\) 可让该比较器在不到 50 ps 的时间内分辨这么小的输入差异（〜LSB / 10）。 对于比较器而言，重要的是要获得尽可能短的解析时间，以减轻由于亚稳定性而导致的精度下降。为了研究亚稳性对该ADC精度的影响，仿真输入电压低至1 pV 的比较器时钟及其差分输出。对于大约 10μV 及以下的输入电压，比较器无法提供有效的电压。在分配的周期结束之前将数字电平发送到 CDAC。改善这种情况的可能方法包括在循环中分配更多的时间和/或在比较器中创建更多的增益，这是以速度和/或功耗为代价的。在本文中，亚稳态在半异步逻辑中进行处理，并在比较器之后执行决策。这确保了在正常操作中，由亚稳定性引起的精度降低不是主要因素，而不会影响采样率或增加功率。 输入共模电压 \\(V_{CM,IN}\\) 是比较器设计的重要方面，它会影响其分辨时间和噪声。较高的 \\(V_{CM,IN}\\) 会增加通过输入对的电流，从而缩短积分时间。噪声积分带宽也增加了；因此，其取值对于实现两者之间的最佳值至关重要。 实验显示了三个不同比较器的分辨时间和能量/比较与输入信号的关系。对于在 LSB 范围内的非常小的输入信号，由于半异步时序，比较器的速度决定了 ADC 的最大速度，对于上述选型条件，triple-tail 设计将分辨时间缩短了 20% 以上。对于较大的输入信号，triple-tail 设计的比较器显示了稍大的分辨析时间，这归因于三级结构相对单级 Strong-Arm 和 double-tail 相比，它的门延迟增加了。由于此时比较器分辨时间本来就很短，所以这个稍大的值不会影响 ADC 的速度。将模拟比较器的功率除以最大频率，计算能量/比较，即解析最小的所示输入（0.2 mV）可以实现的最高频率。triple-tail 的比较器通过双尾实现了类似的能量/比较，比 Strong-Arm 锁存器高约 35%。 该比较器相对 ADC 的总功率贡献率为 29% ，而 ADC 采样速率中的速度贡献占主导地位，速度优势克服了较高的能量比值，尤其是在SAR周期内累积时。 References Triple Tail Comparator Double Tail Comparator Strong Arm Comparator","tags":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/tags/IC/"},{"name":"ADC","slug":"ADC","permalink":"https://wiki.robin-ic.fun/tags/ADC/"},{"name":"comparator","slug":"comparator","permalink":"https://wiki.robin-ic.fun/tags/comparator/"}],"categories":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/categories/IC/"},{"name":"ADC","slug":"IC/ADC","permalink":"https://wiki.robin-ic.fun/categories/IC/ADC/"}]}],"categories":[{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/categories/IC/"},{"name":"ADC","slug":"IC/ADC","permalink":"https://wiki.robin-ic.fun/categories/IC/ADC/"},{"name":"Analog","slug":"IC/Analog","permalink":"https://wiki.robin-ic.fun/categories/IC/Analog/"},{"name":"Basics","slug":"Basics","permalink":"https://wiki.robin-ic.fun/categories/Basics/"},{"name":"Signals and Systems","slug":"Basics/Signals-and-Systems","permalink":"https://wiki.robin-ic.fun/categories/Basics/Signals-and-Systems/"},{"name":"Tools","slug":"Tools","permalink":"https://wiki.robin-ic.fun/categories/Tools/"},{"name":"Writing","slug":"Tools/Writing","permalink":"https://wiki.robin-ic.fun/categories/Tools/Writing/"},{"name":"Website","slug":"Website","permalink":"https://wiki.robin-ic.fun/categories/Website/"},{"name":"Git","slug":"Tools/Git","permalink":"https://wiki.robin-ic.fun/categories/Tools/Git/"}],"tags":[{"name":"ADC","slug":"ADC","permalink":"https://wiki.robin-ic.fun/tags/ADC/"},{"name":"Signal & System","slug":"Signal-System","permalink":"https://wiki.robin-ic.fun/tags/Signal-System/"},{"name":"DSP","slug":"DSP","permalink":"https://wiki.robin-ic.fun/tags/DSP/"},{"name":"Signals & Systems","slug":"Signals-Systems","permalink":"https://wiki.robin-ic.fun/tags/Signals-Systems/"},{"name":"writing","slug":"writing","permalink":"https://wiki.robin-ic.fun/tags/writing/"},{"name":"overleaf","slug":"overleaf","permalink":"https://wiki.robin-ic.fun/tags/overleaf/"},{"name":"Latex","slug":"Latex","permalink":"https://wiki.robin-ic.fun/tags/Latex/"},{"name":"hexo","slug":"hexo","permalink":"https://wiki.robin-ic.fun/tags/hexo/"},{"name":"website","slug":"website","permalink":"https://wiki.robin-ic.fun/tags/website/"},{"name":"git","slug":"git","permalink":"https://wiki.robin-ic.fun/tags/git/"},{"name":"github","slug":"github","permalink":"https://wiki.robin-ic.fun/tags/github/"},{"name":"tools","slug":"tools","permalink":"https://wiki.robin-ic.fun/tags/tools/"},{"name":"IC","slug":"IC","permalink":"https://wiki.robin-ic.fun/tags/IC/"},{"name":"comparator","slug":"comparator","permalink":"https://wiki.robin-ic.fun/tags/comparator/"}]}